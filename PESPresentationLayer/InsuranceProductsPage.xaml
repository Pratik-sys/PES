<Page x:Class="PESPresentationLayer.InsuranceProductsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PESPresentationLayer"
      ShowsNavigationUI="False"
      mc:Ignorable="d" 
      Background="#fff"
      Loaded="Page_Loaded"
      Title="InsuranceProductsPage">
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="GreenButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#00d800"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#00d800"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#62ff62"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#62ff62"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="YellowButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EAB01E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#F1CA68"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#F1CA68"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <StackPanel Margin="50" HorizontalAlignment="Center">
        <TextBlock x:Name="txt_insuranceProductHead" Margin="10" HorizontalAlignment="Center" Text="Insurance Products" FontSize="26"/>
        <StackPanel Margin="10" HorizontalAlignment="Center" Orientation="Horizontal">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Label Name="lbl_productId" Grid.Row="0" Grid.Column="0" Content="Product Id" Margin="10" HorizontalAlignment="Center" FontSize="16"/>
                <TextBox x:Name="txt_proctId" Grid.Row="0" Grid.Column="1"  Margin="10" HorizontalAlignment="Center" Padding="5" Width="150"/>
                <Label Name="lbl_productName" Grid.Row="1" Grid.Column="0" Content="Product Name" Margin="10" HorizontalAlignment="Center" FontSize="16"/>
                <TextBox x:Name="txt_productName" Grid.Row="1" Grid.Column="1"  Margin="10" HorizontalAlignment="Center" Padding="5" Width="150"/>
                <Label Name="lbl_productLine" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="10" Content="Product Line" FontSize="16"/>
                <ComboBox Name="cmb_productLine" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="10" Padding="5" Width="150">
                    <ComboBoxItem Content="Life"/>
                    <ComboBoxItem Content="Non Life" IsSelected="True" />
                </ComboBox>
                <Button x:Name="btn_Search" BorderBrush="#FF2F80ED"  Background="#2F80ED" Foreground="#FFFFFF" FontFamily="Montserrat" Grid.Row="0" Grid.Column="3" Margin="10" Padding="5" Width="100" Content="Search" FontSize="16" Click="btn_Search_Click" Style="{DynamicResource GreenButton}"/>
                <Button x:Name="btn_Add" BorderBrush="#FF2F80ED"  Background="#2F80ED" Foreground="#FFFFFF" FontFamily="Montserrat" Grid.Row="1" Grid.Column="3" Margin="10" Padding="5" Width="100" Content="Add" FontSize="16" Click="btn_Add_Click" Style="{DynamicResource YellowButton}"/>
                <Button x:Name="btn_Update" BorderBrush="#FF2F80ED"  Background="#2F80ED" Foreground="#FFFFFF" FontFamily="Montserrat" Grid.Row="2" Grid.Column="3" Margin="10" Padding="5" Width="100" Content="Update" FontSize="16" Click="btn_Update_Click" Style="{DynamicResource YellowButton}"/>
            </Grid>
        </StackPanel>
        <StackPanel>
            <DataGrid x:Name="grid_productDetails" Height="250" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" FontSize="16">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding productId}" IsReadOnly="True" Header="Product Id"></DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding productName}" IsReadOnly="True" Header="Product Name"></DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding productLine}" IsReadOnly="True" Header="Poduct Line"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
        <StackPanel Margin="10" HorizontalAlignment="Center" VerticalAlignment="Top" Orientation="Horizontal">
            <Button x:Name="btn_back" BorderBrush="#FF2F80ED"  Background="#2F80ED" Foreground="#FFFFFF" FontFamily="Montserrat" Margin="10" Padding="5" Width="100" Content="Back" FontSize="16" Click="btn_back_Click" Style="{DynamicResource YellowButton}"/>
            <Button x:Name="btn_reset" BorderBrush="#FF2F80ED"  Background="#2F80ED" Foreground="#FFFFFF" FontFamily="Montserrat" Margin="10" Padding="5" Width="100" Content="Reset" FontSize="16" Click="btn_reset_Click" Style="{DynamicResource YellowButton}"/>
        </StackPanel>
    </StackPanel>
</Page>
